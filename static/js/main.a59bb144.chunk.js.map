{"version":3,"sources":["components/Movierow/MovieRow.js","Tmdb.js","components/FeaturedMovie/FeaturedMovie.js","App.js","index.js"],"names":["MovieRow","title","items","className","results","length","map","item","key","src","poster_path","alt","original_title","API_KEY","basicFetch","endpoint","a","fetch","req","json","Tmdb","getHomeList","slug","getMovieInfo","movieId","type","info","FeaturedMovie","firstDate","Date","first_air_date","genres","i","push","name","style","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_avarage","getFullYear","number_of_seasons","overview","href","id","join","App","useState","movieList","setMovieList","featuredData","setfeaturedData","useEffect","list","topRated","filter","randomChosen","Math","floor","random","chosen","chosenInfo","loadAll","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a59bb144.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieRow.css';\n\n\nconst MovieRow = ({title, items}) =>{\n  \n  return(  \n    <div className=\"movieRow\">\n     <h2>{title}</h2>\n     <div className=\"movieRow-listarea\">\n       <div className=\"movieRow-list\">\n        {items.results.length > 0 && items.results.map((item,key)=>(\n          <div key={key} className=\"movieRow-item\"> \n            <img  src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}/>\n          </div>\n        ))}\n       </div>\n     </div>\n    </div>\n  );\n}\nexport default MovieRow;","const API_KEY = 'b2e9a64eb9006c9efa13a90dbaa2193e';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\nconst basicFetch = async (endpoint) => {\n    const req = await fetch(`${API_BASE}${endpoint}`)\n    const json = await req.json()\n    return json\n}\n\nconst Tmdb = {\n    getHomeList: async()  =>{\n        return[\n            {\n                slug: 'toprated',\n                title: 'Em alta',\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title: 'Ação',\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'comedy',\n                title: 'Comédia',\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title: 'Romance',\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\n            }\n        ];\n    },\n    getMovieInfo: async (movieId,type) => {\n        let info = {};\n\n        if(movieId){\n            info = basicFetch(`/${type}/${movieId}?language=pt-BR&api_key=${API_KEY}`)\n        }\n\n        return info;\n    }\n    \n}\n\nexport default Tmdb;","import React from 'react';\nimport './FeaturedMovie.css';\n\n const FeaturedMovie = ({item}) =>{\n    let firstDate = new Date(item.first_air_date)\n    let genres = []\n    for(let i in item.genres){\n        genres.push( item.genres[i].name )\n    }\n\n    return(\n        <section className=\"featured\" style={{\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n        }}>\n            <div className=\"featured-vertical\">\n                <div className=\"featured-horizontal\">\n                    <div className=\"featured-name\">{item.original_name}</div>\n                    <div className=\"featured-info\">\n                        <div className=\"featured-points\">{item.vote_avarage} pontos</div>\n                        <div className=\"featured-year\">{firstDate.getFullYear()}</div>\n                        <div className=\"featured-seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\n                    </div>\n                    <div className=\"featured-description\">{item.overview}</div>\n                    <div className=\"featured-buttons\">\n                        <a href={`watch/${item.id}`} className=\"watch-button\">► Assistir</a>\n                        <a href={`list/${item.id}` } className=\"mylist-button\">✛ Minha lista</a>\n                    </div>\n                    <div className=\"featured-genres\"><strong>Gêneros:</strong> {genres.join(', ')}</div>\n                </div>\n            </div>\n            \n        </section>\n    );\n}\n\nexport default FeaturedMovie;","import React, { useEffect, useState} from 'react';\nimport MovieRow from './components/Movierow/MovieRow';\nimport Tmdb from './Tmdb';\nimport  './App.css';\nimport FeaturedMovie from './components/FeaturedMovie/FeaturedMovie';\n\nconst App = () => {\n  \n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setfeaturedData] = useState(null);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      //Pegando a lista total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //Pegando filmes em destaque\n      let topRated = list.filter(i=>i.slug === 'toprated');\n      let randomChosen = Math.floor(Math.random() * (topRated[0].items.results.length -1));\n      let chosen = topRated[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id,'tv');\n      setfeaturedData(chosenInfo);\n    }\n\n    loadAll();\n  }, [])\n  return (\n    <div className=\"page\">\n      \n      {featuredData &&\n        <FeaturedMovie item={featuredData}/>\n      } \n      \n\n      <section className=\"lists\">\n        {movieList.map((item,key) => (\n        <MovieRow key={key} title={item.title} items={item.items}/>\n        ))\n        }\n      </section>\n    </div>\n  )\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}