{"version":3,"sources":["components/Movierow/MovieRow.js","Tmdb.js","App.js","index.js"],"names":["MovieRow","title","items","className","results","length","map","item","key","src","poster_path","alt","original_title","API_KEY","basicFetch","endpoint","a","fetch","req","json","Tmdb","getHomeList","slug","getMovieInfo","movieId","type","info","App","useState","movieList","setMovieList","useEffect","list","loadAll","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAqBeA,EAjBE,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,MAExB,OACE,sBAAKC,UAAU,WAAf,UACC,6BAAKF,IACL,qBAAKE,UAAU,oBAAf,SACE,qBAAKA,UAAU,gBAAf,SACED,EAAME,QAAQC,OAAS,GAAKH,EAAME,QAAQE,KAAI,SAACC,EAAKC,GAAN,OAC7C,qBAAeL,UAAU,gBAAzB,SACE,qBAAMM,IAAG,yCAAoCF,EAAKG,aAAeC,IAAKJ,EAAKK,kBADnEJ,cCZdK,EAAU,mCAGVC,EAAU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACGC,MAAM,GAAD,OAHV,gCAGU,OAAeF,IADvB,cACTG,EADS,gBAEIA,EAAIC,OAFR,cAETA,EAFS,yBAGRA,GAHQ,2CAAH,sDA2CDC,EArCF,CACTC,YAAY,WAAD,4BAAE,sBAAAL,EAAA,sEAKYF,EAAW,wDAAD,OAAyDD,IAL/E,gCAGDS,KAAM,WACNrB,MAAO,UACPC,MALC,eAUYY,EAAW,yDAAD,OAA0DD,IAVhF,gCAQDS,KAAM,SACNrB,MAAO,aACPC,MAVC,gBAeYY,EAAW,yDAAD,OAA0DD,IAfhF,iCAaDS,KAAM,SACNrB,MAAO,aACPC,MAfC,gBAoBYY,EAAW,4DAAD,OAA6DD,IApBnF,iCAkBDS,KAAM,UACNrB,MAAO,UACPC,MApBC,2FAAF,kDAAC,GAwBZqB,aAAa,WAAD,4BAAE,WAAOC,EAAQC,GAAf,eAAAT,EAAA,6DACNU,EAAO,GAERF,IACCE,EAAOZ,EAAW,IAAD,OAAKW,EAAL,YAAaD,EAAb,mCAA+CX,KAJ1D,kBAOHa,GAPG,2CAAF,qDAAC,ICYFC,G,MAxCH,WAEV,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAmBA,OAhBAC,qBAAU,YACK,uCAAG,4BAAAf,EAAA,sEAEGI,EAAKC,cAFR,OAEVW,EAFU,OAGdF,EAAaE,GAHC,2CAAH,qDAabC,KACC,IAED,qBAAK9B,UAAU,OAAf,SAOE,yBAASA,UAAU,QAAnB,SACG0B,EAAUvB,KAAI,SAACC,EAAKC,GAAN,OACf,cAAC,EAAD,CAAoBP,MAAOM,EAAKN,MAAOC,MAAOK,EAAKL,OAApCM,YCjCvB0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7c6345ab.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieRow.css';\n\n\nconst MovieRow = ({title, items}) =>{\n  \n  return(  \n    <div className=\"movieRow\">\n     <h2>{title}</h2>\n     <div className=\"movieRow-listarea\">\n       <div className=\"movieRow-list\">\n        {items.results.length > 0 && items.results.map((item,key)=>(\n          <div key={key} className=\"movieRow-item\"> \n            <img  src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}/>\n          </div>\n        ))}\n       </div>\n     </div>\n    </div>\n  );\n}\nexport default MovieRow;","const API_KEY = 'b2e9a64eb9006c9efa13a90dbaa2193e';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\nconst basicFetch = async (endpoint) => {\n    const req = await fetch(`${API_BASE}${endpoint}`)\n    const json = await req.json()\n    return json\n}\n\nconst Tmdb = {\n    getHomeList: async()  =>{\n        return[\n            {\n                slug: 'toprated',\n                title: 'Em alta',\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title: 'Ação',\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'comedy',\n                title: 'Comédia',\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title: 'Romance',\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\n            }\n        ];\n    },\n    getMovieInfo: async (movieId,type) => {\n        let info = {};\n\n        if(movieId){\n            info = basicFetch(`/${type}/${movieId}?language=pt-BR&api_key=${API_KEY}`)\n        }\n\n        return info;\n    }\n    \n}\n\nexport default Tmdb;","import React, { useEffect, useState} from 'react';\nimport MovieRow from './components/Movierow/MovieRow';\nimport Tmdb from './Tmdb';\nimport  './App.css';\n//import FeaturedMovie from './components/FeaturedMovie/FeaturedMovie';\n\nconst App = () => {\n  \n  const [movieList, setMovieList] = useState([]);\n  // const [featuredData, setfeaturedData] = useState(null);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      //Pegando a lista total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //Pegando filmes em destaque\n      // let topRated = list.filter(i=>i.slug === 'toprated');\n      // let randomChosen = Math.floor(Math.random() * (topRated[0].items.results.length -1));\n      // let chosen = topRated[0].items.results[randomChosen];\n      // let chosenInfo = await Tmdb.getMovieInfo(chosen.id,'tv');\n      // setfeaturedData(chosenInfo);\n    }\n\n    loadAll();\n  }, [])\n  return (\n    <div className=\"page\">\n      \n      {/* {featuredData &&\n        <FeaturedMovie item={featuredData}/>\n      } */}\n      \n\n      <section className=\"lists\">\n        {movieList.map((item,key) => (\n        <MovieRow key={key} title={item.title} items={item.items}/>\n        ))\n        }\n      </section>\n    </div>\n  )\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}